char path[100] = "";
unsigned char path_length = 0;
char path[] = {'L','S','R','B','S'}


char select_turn(unsigned char found_left, unsigned char found_straight, unsigned char found_right){
  if (found_left == 1) {
    return 'L';
  }
  else if (found_straight == 1) {
    return 'S';
  }
  else if(found_right == 1) {
    return 'R';
  }
  else {
    return 'B';
  }
}


void simplify_path() {
  if (path_length < 3 || path[path_length-2] != 'B'){
    return;
  }


  int total_angle = 0;
  int i;
  for(i=1;i<=3;i++)
  {
    switch(path[path_length-i])
    {
      case 'R':
        total_angle += 90;
        break;
      case 'L':
        total_angle += 270;
        break;
      case 'B':
        total_angle += 180;
        break;
    }
  }


  total_angle = total_angle %360;


  switch(total_angle)
  {
    case 0:
      path[path_length - 3] = 'S';
      break;
    case 90:
      path[path_length - 3] = 'R';
      break;
    case 180:
      path[path_length - 3] = 'B';
      break;
    case 270:
      path[path_length - 3] = 'L';
      break;
  }


  // The path is now two steps shorter.
  path_length -= 2;
 
  printf(path)
}


void maze_solve()
{
  while(1)
  {
    // Complete the first loop of maze here. Create a function for this.


    unsigned char found_left = 0;
    unsigned char found_striaght = 0;
    unsigned char found_right = 0;


    //Check for left/ straight/ right exits.


    unsigned char dir = select_turn(found_left, found_straight, found_right);


    //Create turn function.
    turn(dir);


    path[path_length] = dir;
    path_length ++;
   
    // Check that the path_length does not exceed the bounds of the array.


    // Simplify the learned path.
    simplify_path();


    //Print the path through the serial print.
  }
}


void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
}


void loop() {
  // put your main code here, to run repeatedly:
  path[] = {'L','S','R','B','S'}
  path_length = 5;


  simplify_path();


  for(int j = 0; j <= path_length; j++)
  {
    Serial.println(path[j]);
  }


}
